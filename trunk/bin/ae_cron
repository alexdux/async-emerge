#!/bin/bash -l

# ae_cron - 'ae_chroot ae_makeworld' shortcut for cron
# GPL-2
# version: 2.0
# alexdu@forums.gentoo.org

# Usage:
# - install to cron (example) -
# # crontab -e
# 30 22 * * *	/usr/bin/ae_cron
# ^D
# - 'manual' use -
# # ae_cron
# - that is the same as -
# # ae_chroot|ae_vcs ae_makeworld

# get config
. /etc/async.emerge.conf


lockFile="${AE_PID[AE_REBUILD_PATH]}${AE_RCMD[COOK_FILE_PREFIX]}${AE_PID[AE_REBUILD_FILE]}" # change!
pN=$((ps -p $(<"$lockFile") -o comm= ) 2>/dev/null)

if [[ "$pN" == 'ae_chroot' || "$pN" == 'ae_vcs' || "$pN" == "$PNAME" ]]; then
	echo -e "WARNING: 'ae_makeworld' is already running, skip calling it from CRON..." >> \
		"${AE_LOG[DIR_LAST]}${AE_LOG[FILE_CRON]}"
else
	# make lock
	rm -f "$lockFile" &> /dev/null
	trap "cat \"${AE_LOG[DIR_LAST]}${AE_LOG[FILE_CRON]}\" >> \"${AE_LOG[DIR_SAVE]}${AE_LOG[FILE_CRON]}\"" INT TERM EXIT
	(echo '--- '$(date)' ---' && time ae_chroot ae_makeworld && echo) &> "${AE_LOG[DIR_LAST]}${AE_LOG[FILE_CRON]}"
	(($?)) && \
		echo $(($(cat "${AE_DIR[REBUILD_VAR]}.${AE_RCMD[COOK_FILE_PREFIX]}${AE_SIGN[RBLOOP_LOGIC]}" 2>/dev/null || \
			echo '0')|${AE_RBLL[_CRON_FAIL]})) > \
				"${AE_DIR[REBUILD_VAR]}.${AE_RCMD[COOK_FILE_PREFIX]}${AE_SIGN[RBLOOP_LOGIC]}"  
fi

