#summary About Async Emerge

=About=
Async Emerge is a set of bash scripts that do semi-automatic Gentoo updates.

All scripts of Async Emerge (AE) could be splitted by two parts: one in background, usually by cron,
prebuilds binary updates for all needed packages with all needed dependencies, another part is
make update physically by installing this binary updates to the Gentoo system.

In order to make available to build binary packages with dependencies, first part is working in a
specially chrooted to a virtual filesystem environment. This environment is done by using AUFS.<br>
In a way to differ those parts they were called: Virtually Chrooted System (VCS) and Gentoo Real System (GRS).<br>
VCS is the chrooted environment to the exact virtual read only copy of the all filesystem (with a couple of exclusions).<br>
GRS is real filesystem (without chroot).

AE makes a lot logs and has an utility to show current state of VCS and GRS and a list of packages
were built for the update.

Since Gentoo updates sometimes is tricky AE has additional logic that trying hard to make some extra
needed steps for the system consistency recovery.

After all, this scripts save about 90% of Gentoo admin time. The exact digit is slightly vary depending of
the hardware and the logic of the update.

=Features=
  * sync portage with overlays (both optional)
  * build binaries for all updated or changed packages, for all dependencies
  * use tmpfs for packages building (could be switched off if the RAM is not enough)
  * update world with new packages and rebuild packages against changed USE flags
  * detects changes in subsets (like Python, Perl and so on) and rebuild dependencies (do another needed action)
  * remove obsoleted/unneeded packages with 'portage depclean'
  * rebuild libs consumers for advised packages (disabled by default for portage-2.2+)
  * rebuild system-wide libs dependencies: make '@preserved-rebuild' for portage-2.2+ users or 'revdep-rebuild' for others
  * schedule and do extra 'user' task (like add, remove or rebuild something)
  * has flexible config allowing to enable or disable any features, adjust various portage command, dirs, logs and etc.
  * can send mail by result of binary packages building

=Internals=
==Set of scripts==
`_ae_root_mount` and `_ae_root_umount`

Mount a unmount virtual filesystem with AUFS.
This FS has exact read-only copy of the GRS and read-write 'brahch' that overlap with changes GRS.<br>
Have a set of service dirs which transparently mapped to GRS (for distfiles, packages, logs and etc. exchange).

`ae_cron`

Starter for background binaries build part.<br>
Boils down to `ae_vcs ae_makeworld` shortcut.

`ae_chroot` (and symlink `ae_vcs`)

VCS chroot. Call _ae_root_mount and `_ae_root_umount` if not called before, then chroot to new virtual FS environment.
Could be started manually in interactive mode or used by a script in batch mode (with params).<br>
(Could be used for other tasks like crossdev or testing, but alghouth it was made with this possibility 
in mind it was not tested for this porpoise at all.)


`ae_makeworld` (and symlink `ae_install`)

Rebuild Gentoo system with advanced logic.
Used in both - VCS and GRS.<br>
Call this to install prebuilt binary packages to GRS!


`ae_delta_cleanup` and `ae_chroot_cleanup`

Cleanup VCS. Called by `ae_makeworld` after success build in GRS.<br>
Safe to call manually.

`ae_add_task`

Schedule user task to AE. Call with '--help' for options.<br>
Use it for delayed system care - like install something later, or remove...

`ae_state`

A tool to show current VCS/GRS state. Has many options, call with '--help' for details.

`temerge`

Modified 3d party tool to run package manager in tmpfs.<br>
Visible reduce time of packages building.<br>
Used by `ae_makeworld`. Could be switched off if needed.

`ansi2html`

3d party tool to convert console ANSI colors to HTML page. <br>
Used by `ae_cron` to send report to email.

`/etc/async.emerge.conf`

The configuration file.

=Usage=
  * Install.
  * Check config (it's OTB by default).
  * Add to (ana)cron `ae_cron [-s] [-m address@sld.tld]` (feel free to start it manually if needed, see logs)
  * check periodically update availability with ae_state (or add it to shell rc script, like `~/.bashrc`; it's recommended)
  * when you are in good_mood/have_time/needed, update your Gentoo using prebuit binaries with `ae_install`, read the output, 
follow a package manager extra instructions (skip 'please revdep-rebuild --liblary' - AE wiil do it for you)

Feel free to still use package manager manually (if needed): AE doesn't mean to stop you using `emerge` at all!

Furthermore, basically you don't need to do something additional with AE if you admin you Gentoo manually, AE will use
current state of you system anyway.

(There is one exception - sometimes VCS can 'save' some changed files, e.g. packages.keyword in VCS and GRS will be different
if you edit it in VCS. This is feature. Remove this file or cleanup VCS with ae_delta_cleanup, if it harm your admining.)

=If you need to uninstall AE=
Just:
  * `ae_delta_cleanup && ae_chroot_cleanup`
  * `emerge -C async-emerge`
  * comment out ae_cron in crontab