#summary How to install AE.

* draft *

There are 3 simple steps to install async-emerge (AE). Fourth step is just the test if it is working. Fifth step is lead to be a top-level configuration task. Finer configuration will be described in "Configuration" section...

= 1. Dependencies =

Install some staff are needed to run AE.
<code># emerge -av aufs2 gentoolkit</code>
Then rebuild kernel (better - twice) and do reboot. 
 

= 2. Portage =

Make local overlay:
  * With layman (recommended way). Install layman if not installed yet:
<code># emerge -av layman</code>

Edit laymans list of overlays. Add AE repo beetwen {{{<repositories>}}} & {{{</repositories>}}} tags:
<code># nano /usr/local/portage/layman/overlays.xml</code>
Example:
<pre>
*<?xml version="1.0" encoding="UTF-8"?>* 
*<repositories version="1.0">* 
  <repo priority="50" quality="experimental" status="official"> 
    <name>perl-experimental</name> 
    <description>Experimental ebuilds for Perl packages in Gentoo. Comments and bugreports are welcome!</description> 
    <homepage>http://overlays.gentoo.org/proj/perl/</homepage> 
    <owner> 
      <email>perl@gentoo.org</email> 
    </owner> 
    <source type="git">git://git.overlays.gentoo.org/proj/perl-overlay.git</source> 
  </repo> 
*  <repo priority="50" quality="experimental" status="unofficial">* 
*    <name>async-emerge</name>* 
*    <description>Asynchronous multiple binaries cooker for Gentoo. Comments and bugreports are welcome!</description>* 
*    <homepage>http://code.google.com/p/async-emerge/</homepage>* 
*    <owner>* 
*      <email>alexdu.com.a2e@g33mail.com</email>* 
*    </owner>* 
*    <source type="svn">http://async-emerge.googlecode.com/svn/trunk/</source>* 
*  </repo>* 
*</repositories>* 
</pre>
* Bold lines are mandatory!!! * 

(Also, if you need valid email - remove all digits from it.)

Edit laymans make.conf:
<code># nano /usr/local/portage/layman/make.conf</code>
Example:
<pre>
*PORTDIR_OVERLAY="* 
/usr/local/portage/layman/perl-experimental 
*/usr/local/portage/layman/async-emerge* 
*$PORTDIR_OVERLAY* 
*"*
</pre>
* Bold lines are mandatory!!! *

...

_Alternatively_ you can make local overlay...
  * ...by hands:
<code>
# echo 'PORTDIR_OVERLAY="/usr/local/portage/my $PORTDIR_OVERLAY" # local overlay' >> /etc/make.conf 
# mkdir -p /usr/local/portage/my</code>



= 3. AE ebuild =

You can install to local overlay AE ebuild(s) in 2 ways:
  * Using layman (recommended way). Checkout from SVN:
<code>
# cd /usr/local/portage/layman 
# svn checkout http://async-emerge.googlecode.com/svn/overlay/ async-emerge</code>

Sync with layman:
<code># layman -S</code>

example of correct syncing:
<pre>`*` Running... # /usr/bin/svn up /usr/local/portage/layman/async-emerge
At revision 10.</pre>

...

_Alternatively_ you can install AE ebuilds...
  * ...by hands:
<code>
# mkdir -p /usr/local/portage/my/app-portage/async-emerge
# cd /usr/local/portage/my/app-portage/async-emerge
# wget "http://async-emerge.googlecode.com/svn/overlay/app-portage/async-emerge/"
</code>

...

Now starts common part for both ways - do a check (example):
<pre>
# emerge -s async-emerge
Searching...    
`[ Results for search key : async-emerge ]` 
`[ Applications found : 1 ]` 

`*`  app-portage/async-emerge `[ Masked ]` 
      Latest version available: 1.1_alpha1 
      Latest version installed: `[ Not Installed ]` 
      Size of files: 18 kB 
      Homepage:      `http://code.google.com/p/async-emerge/` 
      Description:   Asynchronous multiple binaries cooker for Gentoo. 
      License:       GPL-2 
</pre>
Unmask AE:
<code># echo "app-portage/async-emerge" > /etc/portage/package.keywords/async-emerge</code>
Now try a check again:
<pre># emerge -s async-emerge
Searching...    
`[ Results for search key : async-emerge ]` 
`[ Applications found : 1 ]` 

`*` app-portage/async-emerge 
      Latest version available: 1.1_alpha1 
      Latest version installed: `[ Not Installed ]` 
      Size of files: 18 kB
      Homepage:      `http://code.google.com/p/async-emerge/` 
      Description:   Asynchronous multiple binaries cooker for Gentoo. 
      License:       GPL-2 
</pre>
*Finally, install AE.*
<code># emerge -av -j1 app-portage/async-emerge</code>


= 4. Testing =

Try to start VCS with "df -h" command:
<code># ae_vcs df -h </code>
example "screenshot":
<pre>
 `*` Chrooting to /var/async.emerge/chroot: 
 `*`   Automounting AUFS, 
 `*` Mounting AUFS root to /var/async.emerge/: 
 `*`   Binded and mounted 26 dirs, +0 created, +5 binded as transparent (non-merged) and created 0 symlinks.                 `[ ok ]` 
 `*` Chrooting to /var/async.emerge/chroot (continued): 
 `*`   Cleaning /var/async.emerge/chroot/var/run from hosts `*`.pid.                                                           `[ ok ]` 
 `*`   proc fs is mounted to /var/async.emerge/chroot/proc.                                                                  `[ ok ]` 
 `*`   Mounting sys fs is not configured.                                                                                    `[ ok ]` 
 `*` Virtually chrooted with: `"df -h"`                                                                                        `[ ok ]` 
`Filesystem            Size  Used Avail Use% Mounted on` 
`/dev/sdb3              20G   15G  4.1G  79% /` 
`sysfs                  20G   15G  4.1G  79% /sys` 
`udev                   20G   15G  4.1G  79% /dev` 
`devpts                 20G   15G  4.1G  79% /dev/pts` 
/dev/sda1              20G   15G  4.1G  79% /mnt/squid
/dev/sdb1              20G   15G  4.1G  79% /mnt/free
shm                    20G   15G  4.1G  79% /dev/shm
df: `/var/async.emerge/chroot/bin': No such file or directory
df: `/var/async.emerge/chroot/boot': No such file or directory
df: `/var/async.emerge/chroot/dev': No such file or directory
df: `/var/async.emerge/chroot/etc': No such file or directory
df: `/var/async.emerge/chroot/home': No such file or directory
df: `/var/async.emerge/chroot/lib': No such file or directory
df: `/var/async.emerge/chroot/mnt': No such file or directory
df: `/var/async.emerge/chroot/mnt/squid': No such file or directory
df: `/var/async.emerge/chroot/mnt/free': No such file or directory
df: `/var/async.emerge/chroot/opt': No such file or directory
df: `/var/async.emerge/chroot/root': No such file or directory
df: `/var/async.emerge/chroot/sbin': No such file or directory
df: `/var/async.emerge/chroot/usr': No such file or directory
df: `/var/async.emerge/chroot/var/amavis': No such file or directory
df: `/var/async.emerge/chroot/var/bind': No such file or directory
df: `/var/async.emerge/chroot/var/cache': No such file or directory
df: `/var/async.emerge/chroot/var/db': No such file or directory
df: `/var/async.emerge/chroot/var/dcc': No such file or directory
df: `/var/async.emerge/chroot/var/empty': No such file or directory
df: `/var/async.emerge/chroot/var/lib': No such file or directory
df: `/var/async.emerge/chroot/var/lock': No such file or directory
df: `/var/async.emerge/chroot/var/log': No such file or directory
df: `/var/async.emerge/chroot/var/run': No such file or directory
df: `/var/async.emerge/chroot/var/spool': No such file or directory
df: `/var/async.emerge/chroot/var/state': No such file or directory
df: `/var/async.emerge/chroot/var/svn': No such file or directory
df: `/var/async.emerge/chroot/var/tmp': No such file or directory
df: `/var/async.emerge/chroot/var/www': No such file or directory
 `*` Unchrooting from /var/async.emerge/chroot:
 `*`   proc fs is unmounted from /var/async.emerge/chroot/proc.                                                              `[ ok ]` 
 `*`   Autounmounting AUFS, 
 `*` Unmounting AUFS /+/var from /var/async.emerge/: 
 `*`   Unmounted and unbinded 27 dirs, +6 as transparent (non-merged) and 0 specials.                                        `[ ok ]` 
 `*` Unchrooting from /var/async.emerge/chroot (continued)                                                                   `[ ok ]` 
#</pre>


= 5. Add to cron/anacron =

In order to build (cook) binaries of packages updates in background you have to schedule `ae_cron` task:
  * Edit cron table:
one example:
<code># crontab -e
`30 22 * * *	/usr/bin/ae_cron`</code>
another example:
<code># async emerge
`30 01 * * *    /usr/bin/ae_cron; /usr/bin/ae_state -dwc | /bin/mail -s "Async Emerge" root`</code>

  * ...or edit anacron table:
<code># nano /etc/anacrontab</code>
Recommended frequency of running is from 1 to 7 days. Anacron is suggested for rare used Gentoo boxes.