#summary Installation.

* draft *

There are 5 simple steps to install AE.

= 1. Dependencies =

Install some staff are needed to run AE.
<code># emerge -av aufs2 gentoolkit</code>
Then rebuild kernel (better - twice) and do reboot. 


= 2. Portage =

Make local user "overlay".
  * By hands:
<code>
# echo "PORTDIR_OVERLAY=\"/usr/local/portage/my $PORTDIR_OVERLAY\" # local overlay" >> /etc/make.conf 
# mkdir -p /usr/local/portage/my</code>
  * With layman (?)



= 3. AE ebuild =

Install to local "overlay" AE ebuild(s).
  * By hands:
<code>
# mkdir -p /usr/local/portage/my/app-portage/async-emerge
# cd /usr/local/portage/my/app-portage/async-emerge
# wget "http://async-emerge.googlecode.com/files/async-emerge-1.1_alpha1.ebuild"
# wget "http://async-emerge.googlecode.com/files/Manifest"
# ls -l
total 12
-rw-r--r-- 1 root root 4191 Jul 10 15:35 async-emerge-1.1_alpha1.ebuild
-rw-r--r-- 1 root root  418 Jul 10 15:35 Manifest
# emerge -s async-emerge
Searching...    
`[ Results for search key : async-emerge ]` 
`[ Applications found : 1 ]` 

`*`  app-portage/async-emerge `[ Masked ]` 
      Latest version available: 1.1_alpha1 
      Latest version installed: `[ Not Installed ]` 
      Size of files: 18 kB 
      Homepage:      `http://code.google.com/p/async-emerge/` 
      Description:   Asynchronous multiple binaries cooker for Gentoo. 
      License:       GPL-2 
# echo "app-portage/async-emerge" > /etc/portage/package.keywords/async-emerge
# emerge -s async-emerge
Searching...    
`[ Results for search key : async-emerge ]` 
`[ Applications found : 1 ]` 

`*` app-portage/async-emerge 
      Latest version available: 1.1_alpha1 
      Latest version installed: `[ Not Installed ]` 
      Size of files: 18 kB
      Homepage:      `http://code.google.com/p/async-emerge/` 
      Description:   Asynchronous multiple binaries cooker for Gentoo. 
      License:       GPL-2 

# emerge -av -j1 app-portage/async-emerge</code>
  * Using layman:
<code># emerge -av layman</code>


= 4. Testing =

Try to start VCS:
<code># ae_vcs df -h </code>
example "screenshot":
<pre>
 `*` Chrooting to /var/async.emerge/chroot: 
 `*`   Automounting AUFS, 
 `*` Mounting AUFS root to /var/async.emerge/: 
 `*`   Binded and mounted 26 dirs, +0 created, +5 binded as transparent (non-merged) and created 0 symlinks.                 `[ ok ]` 
 `*` Chrooting to /var/async.emerge/chroot (continued): 
 `*`   Cleaning /var/async.emerge/chroot/var/run from hosts `*`.pid.                                                           `[ ok ]` 
 `*`   proc fs is mounted to /var/async.emerge/chroot/proc.                                                                  `[ ok ]` 
 `*`   Mounting sys fs is not configured.                                                                                    `[ ok ]` 
 `*` Virtually chrooted with: `"df -h"`                                                                                        `[ ok ]` 
`Filesystem            Size  Used Avail Use% Mounted on` 
`/dev/sdb3              20G   15G  4.1G  79% /` 
`sysfs                  20G   15G  4.1G  79% /sys` 
`udev                   20G   15G  4.1G  79% /dev` 
`devpts                 20G   15G  4.1G  79% /dev/pts` 
/dev/sda1              20G   15G  4.1G  79% /mnt/squid
/dev/sdb1              20G   15G  4.1G  79% /mnt/free
shm                    20G   15G  4.1G  79% /dev/shm
df: `/var/async.emerge/chroot/bin': No such file or directory
df: `/var/async.emerge/chroot/boot': No such file or directory
df: `/var/async.emerge/chroot/dev': No such file or directory
df: `/var/async.emerge/chroot/etc': No such file or directory
df: `/var/async.emerge/chroot/home': No such file or directory
df: `/var/async.emerge/chroot/lib': No such file or directory
df: `/var/async.emerge/chroot/mnt': No such file or directory
df: `/var/async.emerge/chroot/mnt/squid': No such file or directory
df: `/var/async.emerge/chroot/mnt/free': No such file or directory
df: `/var/async.emerge/chroot/opt': No such file or directory
df: `/var/async.emerge/chroot/root': No such file or directory
df: `/var/async.emerge/chroot/sbin': No such file or directory
df: `/var/async.emerge/chroot/usr': No such file or directory
df: `/var/async.emerge/chroot/var/amavis': No such file or directory
df: `/var/async.emerge/chroot/var/bind': No such file or directory
df: `/var/async.emerge/chroot/var/cache': No such file or directory
df: `/var/async.emerge/chroot/var/db': No such file or directory
df: `/var/async.emerge/chroot/var/dcc': No such file or directory
df: `/var/async.emerge/chroot/var/empty': No such file or directory
df: `/var/async.emerge/chroot/var/lib': No such file or directory
df: `/var/async.emerge/chroot/var/lock': No such file or directory
df: `/var/async.emerge/chroot/var/log': No such file or directory
df: `/var/async.emerge/chroot/var/run': No such file or directory
df: `/var/async.emerge/chroot/var/spool': No such file or directory
df: `/var/async.emerge/chroot/var/state': No such file or directory
df: `/var/async.emerge/chroot/var/svn': No such file or directory
df: `/var/async.emerge/chroot/var/tmp': No such file or directory
df: `/var/async.emerge/chroot/var/www': No such file or directory
 `*` Unchrooting from /var/async.emerge/chroot:
 `*`   proc fs is unmounted from /var/async.emerge/chroot/proc.                                                              `[ ok ]` 
 `*`   Autounmounting AUFS, 
 `*` Unmounting AUFS /+/var from /var/async.emerge/: 
 `*`   Unmounted and unbinded 27 dirs, +6 as transparent (non-merged) and 0 specials.                                        `[ ok ]` 
 `*` Unchrooting from /var/async.emerge/chroot (continued)                                                                   `[ ok ]` 
#</pre>


= 5. Add to cron/anacron =

In order to build (cook) binaries of packages updates in background you have to schedule `ae_cron` task:
  * Edit cron table:
example:
<code># crontab -e
`30 22 * * *	/usr/bin/ae_cron`</code>
example:
<code># async emerge
`30 01 * * *    /usr/bin/ae_cron; /usr/local/bin/ae_state -dwc | /bin/mail -s "Async Emerge" root`</code>

  * or anacron table:
<code>`nano /etc/anacrontab`</code>
(Recommended period is from 1 to 7 days.)